name: Validate

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v --tb=short

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8

      - name: Check code formatting with black
        run: |
          black --check custom_components/

      - name: Check imports with isort
        run: |
          isort --check-only custom_components/

      - name: Lint with flake8
        run: |
          flake8 custom_components/ --count --select=E9,F63,F7,F82 --show-source --statistics

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate manifest
        run: |
          python -c "
          import json
          with open('custom_components/xiaozhi_mcp/manifest.json') as f:
              manifest = json.load(f)
              print('✓ Manifest is valid JSON')
              required_fields = ['domain', 'name', 'documentation', 'dependencies', 'codeowners', 'requirements']
              for field in required_fields:
                  if field not in manifest:
                      print(f'✗ Missing required field: {field}')
                      exit(1)
              print('✓ All required fields present')
          "

      - name: Validate hacs.json
        run: |
          python -c "
          import json
          with open('hacs.json') as f:
              hacs = json.load(f)
              print('✓ hacs.json is valid JSON')
              required_fields = ['name', 'homeassistant']
              for field in required_fields:
                  if field not in hacs:
                      print(f'✗ Missing required field: {field}')
                      exit(1)
              print('✓ All required fields present in hacs.json')
          "
